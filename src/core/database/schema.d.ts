/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface Chats {
  created_at: Generated<Date>;
  id: Generated<number>;
  name: string | null;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Messages {
  chat_id: number;
  created_at: Generated<Date>;
  data: Json;
  id: Generated<number>;
  role: "model" | "user";
  updated_at: Generated<Date>;
}

export interface Users {
  created_at: Generated<Date>;
  fullname: string | null;
  id: Generated<number>;
  occupation: string | null;
  phone_number: string | null;
  provider: "google";
  provider_data: Json;
  school: string | null;
  school_address: string | null;
  state: "activated" | "unactivated";
  updated_at: Generated<Date>;
}

export interface DB {
  chats: Chats;
  messages: Messages;
  users: Users;
}
